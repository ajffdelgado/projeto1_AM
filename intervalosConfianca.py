# -*- coding: utf-8 -*-
"""
Created on Wed Nov 28 20:49:49 2018

@author: Delgado
"""

import numpy as np                                                         
import scipy as sp                                                         
import scipy.stats as spt                                                        

Acuracia_media = [79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381, 79.52380952380952, 79.52380952380952, 80.47619047619048, 78.57142857142857, 82.38095238095238, 80.95238095238095, 74.76190476190476, 77.61904761904762, 76.66666666666667, 83.80952380952381]
print(len(Acuracia_media))
conjunto = np.array(Acuracia_media)                  
print(conjunto)    
                                                       

#calcular a matriz média                                               
media = conjunto.mean(axis=0)                                             
print('media:{}'.format(media))                                            

desvio_padrao = np.std(conjunto)                                          
conf_int = scipy.stats.norm.interval(0.95, loc=media, scale=desvio_padrao) 
print("intervalo de confiança: "+str(conf_int))
print(conf_int)
